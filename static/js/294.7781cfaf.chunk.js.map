{"version":3,"file":"static/js/294.7781cfaf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","../node_modules/@chakra-ui/card/src/card-header.tsx","../node_modules/@chakra-ui/card/src/card-footer.tsx","components/Reviews/Reviews.jsx","pages/ReviewsPage.jsx","../node_modules/@chakra-ui/card/src/card-body.tsx","../node_modules/@chakra-ui/card/src/card-context.tsx","../node_modules/@chakra-ui/card/src/card.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewsContent\":\"Reviews_reviewsContent__uAAxd\"};","import { cx } from \"@chakra-ui/shared-utils\"\nimport { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardHeaderProps extends HTMLChakraProps<\"div\"> {}\n\nexport const CardHeader = forwardRef<CardHeaderProps, \"div\">(\n  function CardHeader(props, ref) {\n    const { className, ...rest } = props\n    const styles = useCardStyles()\n    return (\n      <chakra.div\n        ref={ref}\n        className={cx(\"chakra-card__header\", className)}\n        __css={styles.header}\n        {...rest}\n      />\n    )\n  },\n)\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  forwardRef,\n  HTMLChakraProps,\n  chakra,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardFooterProps extends HTMLChakraProps<\"div\"> {\n  justify?: SystemProps[\"justifyContent\"]\n}\n\nexport const CardFooter = forwardRef<CardFooterProps, \"div\">(\n  function CardFooter(props, ref) {\n    const { className, justify, ...rest } = props\n    const styles = useCardStyles()\n    return (\n      <chakra.div\n        ref={ref}\n        className={cx(\"chakra-card__footer\", className)}\n        __css={{\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer,\n        }}\n        {...rest}\n      />\n    )\n  },\n)\n","import React from 'react';\nimport css from './Reviews.module.css';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Heading,\n  Image,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\n\nconst Reviews = ({ comments }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n  return (\n    <>\n      {comments && comments.length > 0 ? (\n        <ul className={css.reviewsList}>\n          {comments.map(\n            ({\n              author_details: { name, avatar_path, username },\n              content,\n              created_at,\n              id,\n              updated_at,\n            }) => {\n              return (\n                <li key={id}>\n                  <Card\n                    direction={{ base: 'column', sm: 'row' }}\n                    overflow=\"hidden\"\n                    variant=\"outline\"\n                  >\n                    <Image\n                      objectFit=\"cover\"\n                      maxW={{ base: '100%', sm: '200px' }}\n                      src={\n                        avatar_path\n                          ? `https://image.tmdb.org/t/p/w200${avatar_path}`\n                          : defaultImg\n                      }\n                      alt=\"\"\n                    />\n\n                    <Stack>\n                      <CardBody>\n                        <CardHeader p={`0 0 0 20px`}>\n                          <Text py=\"2\" fontStyle={`italic`}>\n                            Created at: {created_at}\n                          </Text>\n                        </CardHeader>\n                        <Heading size=\"md\">{username}</Heading>\n                        <Text py=\"2\">{name}</Text>\n                        <Text py=\"2\" h={`150px`} overflowY={`scroll`}>\n                          {content}\n                        </Text>\n\n                        <CardFooter p={`0 0 0 20px`}>\n                          <Text py=\"2\" fontStyle={`italic`}>\n                            Updated at: {updated_at}\n                          </Text>\n                        </CardFooter>\n                      </CardBody>\n                    </Stack>\n                  </Card>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      ) : (\n        <p>Sorry, there're no comments yet</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import Reviews from 'components/Reviews/Reviews';\nimport fetchMovies from 'components/Service/api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [comments, setComments] = useState(null);\n  useEffect(() => {\n    const fetchAllMovies = async () => {\n      try {\n        const dataMovies = await fetchMovies(`movie/${movieId}/reviews`);\n        setComments(dataMovies.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchAllMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      <Reviews comments={comments} />\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardBodyProps extends HTMLChakraProps<\"div\"> {}\n\nexport const CardBody = forwardRef<CardBodyProps, \"div\">(function CardBody(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n  const styles = useCardStyles()\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card__body\", className)}\n      __css={styles.body}\n      {...rest}\n    />\n  )\n})\n","import { createStylesContext } from \"@chakra-ui/system\"\n\nexport const [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\")\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { CardStylesProvider } from \"./card-context\"\n\nexport type CardOptions = {\n  /**\n   * The flex direction of the card\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * The flex alignment of the card\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The flex distribution of the card\n   */\n  justify?: SystemProps[\"justifyContent\"]\n}\n\nexport interface CardProps\n  extends HTMLChakraProps<\"div\">,\n    CardOptions,\n    ThemingProps<\"Card\"> {}\n\nexport const Card = forwardRef<CardProps, \"div\">(function Card(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Card\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card\", className)}\n      __css={{\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container,\n      }}\n      {...rest}\n    >\n      <CardStylesProvider value={styles}>{children}</CardStylesProvider>\n    </chakra.div>\n  )\n})\n"],"names":["ref","chakra","rest","styles","useCardStyles","div","__css","cx","props","CardHeader","forwardRef","justify","CardFooter","justifyContent","footer","comments","length","className","css","map","author_details","name","avatar_path","username","content","created_at","id","updated_at","direction","base","sm","overflow","variant","objectFit","maxW","src","alt","p","py","fontStyle","size","h","overflowY","movieId","useParams","useState","setComments","useEffect","fetchAllMovies","fetchMovies","dataMovies","results","console","error","CardBody","createStylesContext","CardStylesProvider","children","useMultiStyleConfig","align","display","Card","omitThemingProps","alignItems","position","minWidth","wordWrap","container","value"],"sourceRoot":""}