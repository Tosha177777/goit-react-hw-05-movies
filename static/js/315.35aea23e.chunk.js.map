{"version":3,"file":"static/js/315.35aea23e.chunk.js","mappings":"wKAGMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASVC,EAAW,mCAAG,WAAMC,GAAN,yFACKN,EAASO,IAAID,GADlB,uBACVE,EADU,EACVA,KADU,kBAEXA,GAFW,2CAAH,sDAKjB,K,0UCFA,GAA0CC,EAAAA,EAAAA,GAAc,CACtDC,KAAI,oBACJC,aAAY,oGAFd,eAAKC,EAAL,KAAyBC,EAAzB,KAIIC,GAAOC,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQH,GAC3C,GAMII,EAAAA,EAAAA,IAAiBJ,GALnBK,EADF,EACEA,SADF,IAEEC,UAAAA,OAFF,MAEc,OAFd,EAGEC,EAHF,EAGEA,cACAC,EAJF,EAIEA,QACGC,GALL,YAOMC,GAAgBC,EAAAA,EAAAA,GAAiBN,GAEjCO,EAAeJ,GAAO,UADX,kCAC4B,CAAEK,GAAIL,IAAc,GACjE,OAAuBM,EAAAA,EAAAA,KAAIlB,EAAoB,CAAEmB,MAAOb,EAAQG,UAA0BS,EAAAA,EAAAA,KACxFE,EAAAA,EAAAA,IAD2F,gBAGzFf,IAAAA,EACAgB,cAAeX,EACfY,kBAAmBX,EACnBY,KAAM,OACNC,OAAK,kBAAOlB,EAAOmB,WAAcT,IAC9BH,GARsF,IASzFJ,SAAUK,MAGf,IACDZ,EAAKwB,YAAc,QACDvB,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GACXD,EAAhBuB,GAAR,IAAed,GAAf,OAAwBT,EAAxB,GACE,OAAqBc,EAAAA,EAAAA,KAAIhB,GAAD,QAASG,IAAAA,EAAKsB,GAAI,KAAMjB,UAAW,UAAWkB,YAAa,OAAUf,GAChG,IACWa,YAAc,eACNvB,EAAAA,EAAAA,IAAW,SAAwBC,EAAOC,GACpCD,EAAhBuB,GAAR,IAAed,GAAf,OAAwBT,EAAxB,GACA,OAAuBc,EAAAA,EAAAA,KAAIhB,GAAD,QAASG,IAAAA,EAAKsB,GAAI,KAAMjB,UAAW,UAAWkB,YAAa,OAAUf,GAChG,IACaa,YAAc,gBAC5B,IAAIG,GAAW1B,EAAAA,EAAAA,IAAW,SAAmBC,EAAOC,GAClD,IAAMC,EAASL,IACf,OAAuBiB,EAAAA,EAAAA,KAAIE,EAAAA,EAAAA,IAAD,gBAAcf,IAAAA,GAAQD,GAAtB,IAA6BoB,MAAOlB,EAAO,OACtE,IACDuB,EAASH,YAAc,YACRvB,EAAAA,EAAAA,IAAW,SAAmBC,EAAOC,GAChD,IAAIC,EAASL,IACb,OAAqBiB,EAAAA,EAAAA,KAAIY,EAAAA,GAAD,gBAASzB,IAAAA,EAAKkB,KAAM,gBAAmBnB,GAAvC,IAA8CoB,MAAOlB,EAAO,OACvF,IACQoB,YAAc,W,gECEvB,EAnDsB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAChC,EAAD,CACEiC,QAAO,OACPC,cAAa,MACbC,SAAQ,OACRC,IAAG,OACHC,eAAc,SALhB,SAOGP,EAAOQ,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAClD,OACE,SAAChB,EAAD,WACE,SAAC,KAAD,CAAMiB,MAAO,CAAEC,KAAMd,GAAYe,GAAE,kBAAaP,GAAhD,UACE,SAAC,IAAD,CAAMQ,EAAE,QAAQC,EAAC,QAAjB,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEA,EAAC,QACDC,IACEN,EAAW,yCAC2BA,GAnBxD,6EAsBgBO,IAAI,GACJC,aAAa,QAEf,UAAC,IAAD,CAAOC,GAAG,MAAM3C,QAAQ,QAAxB,WACE,SAAC,IAAD,CACE4C,SAAQ,OACRC,aAAY,WACZC,SAAQ,SACRC,WAAU,SAJZ,SAMGhB,KAEH,UAAC,IAAD,CAAMiB,MAAK,OAAX,UAAqB,WAAShB,MAC9B,UAAC,IAAD,CAAMgB,MAAK,OAAX,UAAqB,eAAaf,gBAxB7BH,EA+BlB,KAGN,E,UChCD,EAxBiB,WACf,OAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAO5B,EAAP,KAAe6B,EAAf,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,gHAEMrE,EAAAA,EAAAA,GAAY,uBAFlB,OAEbsE,EAFa,OAGbC,EAAUD,EAAWC,QAC3BJ,EAAUI,GAJS,gDAMnBC,QAAQC,MAAR,MANmB,yDAAH,qDASpBJ,GACD,GAAE,KAGD,8BACE,SAAC,IAAD,CAAWK,OAAM,SAAYC,KAAI,SAAYC,EAAC,SAA9C,UACE,SAAC,EAAD,CAAetC,OAAQA,OAI9B,C,gJCnBGuC,GAAWlD,EAAAA,EAAAA,IAAW,SAAmBT,EAAOP,GAClD,IAAQmE,EAAuB5D,EAAvB4D,UAAcC,GAAtB,OAA+B7D,EAA/B,GACMW,GAASmD,EAAAA,EAAAA,KACf,OAAuBvE,EAAAA,EAAAA,KACrBwE,EAAAA,EAAAA,KADwB,QAGtBtE,IAAAA,EACAmE,WAAWpE,EAAAA,EAAAA,IAAG,oBAAqBoE,GACnC,MAAOjD,EAAO,MACXkD,GAGR,G,4FCjBD,GAA0CG,E,QAAAA,IAAoB,QAA9D,eAAKC,EAAL,KAAyBL,EAAzB,I,6MCUID,GAAOlD,EAAAA,EAAAA,IAAW,SAAef,EAAOwE,GAC1C,OAOItE,EAAAA,EAAAA,IAAiBF,GANnByE,EADF,EACEA,UACAC,EAFF,EAEEA,SAFF,IAGEpE,UAAAA,OAHF,MAGc,SAHd,EAIEP,EAJF,EAIEA,QACAoE,EALF,EAKEA,MACGlD,GANL,YAQMY,GAAS8C,EAAAA,EAAAA,IAAoB,OAAQ3E,GAC3C,OAAuBH,EAAAA,EAAAA,KACrBM,EAAAA,EAAAA,KADwB,gBAGtBqE,IAAAA,EACAC,WAAW3E,EAAAA,EAAAA,IAAG,cAAe2E,GAC7BxC,OAAK,QACH2C,QAAS,OACTC,cAAevE,EACfwE,eAAgB/E,EAChBgF,WAAYZ,EACZjD,SAAU,WACVqD,SAAU,EACV5D,SAAU,cACPkB,EAAO,YAETZ,GAfmB,IAgBtByD,UAA0B7E,EAAAA,EAAAA,KAAIuE,EAAAA,EAAoB,CAAE,MAAOvC,EAAQ6C,SAAAA,MAGxE,G","sources":["components/Service/api.js","../node_modules/@chakra-ui/layout/src/list.tsx","components/HomeMovieList/HomeMovieList.jsx","pages/HomePage.jsx","../node_modules/@chakra-ui/card/src/card-body.tsx","../node_modules/@chakra-ui/card/src/card-context.tsx","../node_modules/@chakra-ui/card/src/card.tsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '08e108d01762394f2ae50fa4fb841dfd';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst fetchMovies = async url => {\n  const { data } = await instance.get(url);\n  return data;\n};\n\nexport default fetchMovies;\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Image,\n  List,\n  ListItem,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\n\nconst HomeMovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n  return (\n    <List\n      display={`flex`}\n      flexDirection={`row`}\n      flexWrap={`wrap`}\n      gap={`20px`}\n      justifyContent={`center`}\n    >\n      {movies.map(({ id, title, vote_average, vote_count, poster_path }) => {\n        return (\n          <ListItem key={id}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n              <Card w=\"200px\" h={`359px`}>\n                <CardBody>\n                  <Image\n                    h={`240px`}\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                        : defaultImg\n                    }\n                    alt=\"\"\n                    borderRadius=\"lg\"\n                  />\n                  <Stack mt=\"8px\" spacing=\"1.5px\">\n                    <Heading\n                      fontSize={`16px`}\n                      textOverflow={`ellipsis`}\n                      overflow={`hidden`}\n                      whiteSpace={`nowrap`}\n                    >\n                      {title}\n                    </Heading>\n                    <Text color={`grey`}>Rating: {vote_average}</Text>\n                    <Text color={`grey`}>Vote Count: {vote_count}</Text>\n                  </Stack>\n                </CardBody>\n              </Card>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default HomeMovieList;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport fetchMovies from 'components/Service/api';\nimport HomeMovieList from 'components/HomeMovieList/HomeMovieList';\nimport { Container } from '@chakra-ui/react';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchAllMovies = async () => {\n      try {\n        const dataMovies = await fetchMovies('/trending/movie/day');\n        const results = dataMovies.results;\n        setMovies(results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchAllMovies();\n  }, []);\n\n  return (\n    <section>\n      <Container margin={`0 auto`} maxW={`1440px`} p={`0 15px`}>\n        <HomeMovieList movies={movies} />\n      </Container>\n    </section>\n  );\n};\n\nexport default HomePage;\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardBodyProps extends HTMLChakraProps<\"div\"> {}\n\nexport const CardBody = forwardRef<CardBodyProps, \"div\">(function CardBody(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n  const styles = useCardStyles()\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card__body\", className)}\n      __css={styles.body}\n      {...rest}\n    />\n  )\n})\n","import { createStylesContext } from \"@chakra-ui/system\"\n\nexport const [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\")\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { CardStylesProvider } from \"./card-context\"\n\nexport type CardOptions = {\n  /**\n   * The flex direction of the card\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * The flex alignment of the card\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The flex distribution of the card\n   */\n  justify?: SystemProps[\"justifyContent\"]\n}\n\nexport interface CardProps\n  extends HTMLChakraProps<\"div\">,\n    CardOptions,\n    ThemingProps<\"Card\"> {}\n\nexport const Card = forwardRef<CardProps, \"div\">(function Card(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Card\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card\", className)}\n      __css={{\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container,\n      }}\n      {...rest}\n    >\n      <CardStylesProvider value={styles}>{children}</CardStylesProvider>\n    </chakra.div>\n  )\n})\n"],"names":["instance","axios","baseURL","params","api_key","fetchMovies","url","get","data","createContext","errorMessage","ListStylesProvider","useListStyles","List","props","forwardRef","styles","children","styleType","useMultiStyleConfig","omitThemingProps","stylePosition","spacing","rest","validChildren","selector","spacingStyle","getValidChildren","value","ul","name","listStyleType","chakra","role","__css","container","displayName","OrderedList","as","UnorderedList","ListItem","ListIcon","Icon","movies","location","useLocation","display","flexDirection","flexWrap","gap","justifyContent","map","id","title","vote_average","vote_count","poster_path","state","from","to","w","h","src","alt","borderRadius","mt","fontSize","textOverflow","overflow","whiteSpace","color","useState","setMovies","useEffect","fetchAllMovies","dataMovies","results","console","error","margin","maxW","p","ref","useCardStyles","div","cx","CardBody","createStylesContext","CardStylesProvider","direction","justify","align","Card","alignItems","position","minWidth","wordWrap"],"sourceRoot":""}